name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy_discord_bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: SSH into DigitalOcean and restart process
        env:
          DO_HOST: ${{ secrets.DO_HOST }}
          DO_USER: ${{ secrets.DO_USER }}
          DO_PASS: ${{ secrets.DO_PASS }}
        run: |
          sshpass -p "$DO_PASS" ssh -o StrictHostKeyChecking=no $DO_USER@$DO_HOST << 'EOF'
            # Attach to screen 6525
            screen -S 6525 -X stuff $'\003'   # sends Ctrl+C to kill current process
            screen -S 6525 -X stuff "git pull origin main$(printf '\r')"
            screen -S 6525 -X stuff "python3 daemon.py$(printf '\r')"
          EOF

  deploy_api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: SSH into DigitalOcean and restart process
        env:
          DO_HOST: ${{ secrets.DO_HOST }}
          DO_USER: ${{ secrets.DO_USER }}
          DO_PASS: ${{ secrets.DO_PASS }}
        run: |
          sshpass -p "$DO_PASS" ssh -o StrictHostKeyChecking=no $DO_USER@$DO_HOST << 'EOF'
            # Attach to screen 2050
            screen -S 2050 -X stuff $'\003'   # sends Ctrl+C to kill current process
            screen -S 2050 -X stuff "git pull origin main$(printf '\r')"
            screen -S 2050 -X stuff "gunicorn --bind 127.0.0.1:5000 wsgi:app$(printf '\r')"
          EOF

  deploy_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Stop frontend on server and remove old files
        env:
          DO_HOST: ${{ secrets.DO_HOST }}
          DO_USER: ${{ secrets.DO_USER }}
          DO_PASS: ${{ secrets.DO_PASS }}
        run: |
          sshpass -p "$DO_PASS" ssh -o StrictHostKeyChecking=no $DO_USER@$DO_HOST << 'EOF'
            screen -S 2018 -X stuff $'\003'   # sends Ctrl+C to kill current process
            screen -S 2018 -X stuff "rm -rf build$(printf '\r')"
          EOF

      - name: Copy new frontend build to server
        run: |
          # Install sshpass if not already available
          sudo apt-get update
          sudo apt-get install -y sshpass

          # Use sshpass to copy the build folder
          sshpass -p "${{ secrets.DO_PASS }}" scp -o StrictHostKeyChecking=no -r frontend/build ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }}:/home/frontend/

      
      - name: SSH into DigitalOcean, open up permissions, and restart frontend server
        env:
          DO_HOST: ${{ secrets.DO_HOST }}
          DO_USER: ${{ secrets.DO_USER }}
          DO_PASS: ${{ secrets.DO_PASS }}
        run: |
          sshpass -p "$DO_PASS" ssh -o StrictHostKeyChecking=no $DO_USER@$DO_HOST << 'EOF'
            screen -S 2018 -X stuff "sudo find /home/frontend/build -type d -exec chmod 755 {} \;$(printf '\r')"
            screen -S 2018 -X stuff "sudo find /home/frontend/build -type d -exec chmod 644 {} \;$(printf '\r')"
            screen -S 2018 -X stuff "serve -s build$(printf '\r')"
          EOF