/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LeaguesLeagueIdImport } from './routes/leagues/$leagueId'
import { Route as DraftsDraftIdImport } from './routes/drafts/_.$draftId'
import { Route as LeaguesLeagueIdRostersLazyImport } from './routes/leagues/$leagueId/rosters.lazy'
import { Route as LeaguesLeagueIdWaiversLazyImport } from './routes/leagues/$leagueId/waivers.lazy'
import { Route as DraftsDraftIdScoresLazyImport } from './routes/drafts/$draftId/scores.lazy'
import { Route as DraftsDraftIdLeagueWeeksLazyImport } from './routes/drafts/$draftId/leagueWeeks.lazy'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const LeaguesLeagueIdScoresLazyImport = createFileRoute(
  '/leagues/$leagueId/scores',
)()
const LeaguesLeagueIdRankingsLazyImport = createFileRoute(
  '/leagues/$leagueId/rankings',
)()
const EventDataLazyImport = createFileRoute('/eventData')()

const LeaguesLeagueIdRostersLazyImport = createFileRoute(
  '/leagues/$leagueId/rosters',
)()
const LeaguesLeagueIdWaiversLazyImport = createFileRoute(
  '/leagues/$leagueId/waivers',
)()
const DraftsDraftIdScoresLazyImport = createFileRoute(
  '/drafts/$draftId/scores',
)()
const DraftsDraftIdLeagueWeeksLazyImport = createFileRoute(
  '/drafts/$draftId/leagueWeeks',
)()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LeaguesLeagueIdRoute = LeaguesLeagueIdImport.update({
  path: '/leagues/$leagueId',
  getParentRoute: () => rootRoute,
} as any)

const LeaguesLeagueIdScoresLazyRoute = LeaguesLeagueIdScoresLazyImport.update({
  path: '/scores',
  getParentRoute: () => LeaguesLeagueIdRoute,
} as any).lazy(() =>
  import('./routes/leagues/$leagueId/scores.lazy').then((d) => d.Route),
)

const LeaguesLeagueIdRankingsLazyRoute =
  LeaguesLeagueIdRankingsLazyImport.update({
    path: '/rankings',
    getParentRoute: () => LeaguesLeagueIdRoute,
  } as any).lazy(() =>
    import('./routes/leagues/$leagueId/rankings.lazy').then((d) => d.Route),
  )

const LeaguesLeagueIdRostersLazyRoute =
  LeaguesLeagueIdRostersLazyImport.update({
    path: '/rosters',
    getParentRoute: () => LeaguesLeagueIdRoute,
  } as any).lazy(() =>
    import('./routes/leagues/$leagueId/rosters.lazy').then((d) => d.Route),
  )

const LeaguesLeagueIdWaiversLazyRoute =
  LeaguesLeagueIdWaiversLazyImport.update({
    path: '/waivers',
    getParentRoute: () => LeaguesLeagueIdRoute,
  } as any).lazy(() =>
    import('./routes/leagues/$leagueId/waivers.lazy').then((d) => d.Route),
  )

const DraftsDraftIdRoute = DraftsDraftIdImport.update({
  path: '/drafts/$draftId',
  getParentRoute: () => rootRoute,
} as any)

const DraftsDraftIdScoresLazyRoute = DraftsDraftIdScoresLazyImport.update({
  path: '/scores',
  getParentRoute: () => DraftsDraftIdRoute,
} as any).lazy(() =>
  import('./routes/drafts/$draftId/scores.lazy').then((d) => d.Route),
)

const DraftsDraftIdLeagueWeeksLazyRoute = DraftsDraftIdLeagueWeeksLazyImport.update({
  path: '/leagueWeeks',
  getParentRoute: () => DraftsDraftIdRoute,
} as any).lazy(() =>
  import('./routes/drafts/$draftId/leagueWeeks.lazy').then((d) => d.Route),
)

const EventDataLazyRoute = EventDataLazyImport.update({
  path: '/eventData',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/eventData.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/leagues/$leagueId': {
      id: '/leagues/$leagueId'
      path: '/leagues/$leagueId'
      fullPath: '/leagues/$leagueId'
      preLoaderRoute: typeof LeaguesLeagueIdImport
      parentRoute: typeof rootRoute
    }
    '/drafts//$draftId': {
      id: '/drafts//$draftId'
      path: '/drafts/$draftId'
      fullPath: '/drafts/$draftId'
      preLoaderRoute: typeof DraftsDraftIdImport
      parentRoute: typeof rootRoute
    }
    '/eventData': {
      id: '/eventData'
      path: '/eventData'
      fullPath: '/eventData'
      preLoaderRoute: typeof EventDataLazyImport
      parentRoute: typeof rootRoute
    }
    '/leagues/$leagueId/rankings': {
      id: '/leagues/$leagueId/rankings'
      path: '/rankings'
      fullPath: '/leagues/$leagueId/rankings'
      preLoaderRoute: typeof LeaguesLeagueIdRankingsLazyImport
      parentRoute: typeof LeaguesLeagueIdImport
    }
    '/leagues/$leagueId/scores': {
      id: '/leagues/$leagueId/scores'
      path: '/scores'
      fullPath: '/leagues/$leagueId/scores'
      preLoaderRoute: typeof LeaguesLeagueIdScoresLazyImport
      parentRoute: typeof LeaguesLeagueIdImport
    }
    '/leagues/$leagueId/rosters': {
      id: '/leagues/$leagueId/rosters'
      path: '/rosters'
      fullPath: '/leagues/$leagueId/rosters'
      preLoaderRoute: typeof LeaguesLeagueIdRostersLazyImport
      parentRoute: typeof LeaguesLeagueIdImport
    }
    '/leagues/$leagueId/waivers': {
      id: '/leagues/$leagueId/waivers'
      path: '/waivers'
      fullPath: '/leagues/$leagueId/waivers'
      preLoaderRoute: typeof LeaguesLeagueIdWaiversLazyImport
      parentRoute: typeof LeaguesLeagueIdImport
    }
    '/drafts/$draftId/leagueWeeks': {
      id: '/drafts/$draftId/leagueWeeks'
      path: '/leagueWeeks'
      fullPath: '/drafts/$draftId/leagueWeeks'
      preLoaderRoute: typeof DraftsDraftIdLeagueWeeksLazyImport
      parentRoute: typeof DraftsDraftIdImport
    }
  }
}

// Create and export the route tree

interface LeaguesLeagueIdRouteChildren {
  LeaguesLeagueIdRankingsLazyRoute: typeof LeaguesLeagueIdRankingsLazyRoute
  LeaguesLeagueIdScoresLazyRoute: typeof LeaguesLeagueIdScoresLazyRoute
  LeaguesLeagueIdRostersLazyRoute: typeof LeaguesLeagueIdRostersLazyRoute
  LeaguesLeagueIdWaiversLazyRoute: typeof LeaguesLeagueIdWaiversLazyRoute
}

const LeaguesLeagueIdRouteChildren: LeaguesLeagueIdRouteChildren = {
  LeaguesLeagueIdRankingsLazyRoute: LeaguesLeagueIdRankingsLazyRoute,
  LeaguesLeagueIdScoresLazyRoute: LeaguesLeagueIdScoresLazyRoute,
  LeaguesLeagueIdRostersLazyRoute: LeaguesLeagueIdRostersLazyRoute,
  LeaguesLeagueIdWaiversLazyRoute: LeaguesLeagueIdWaiversLazyRoute,
}

const LeaguesLeagueIdRouteWithChildren = LeaguesLeagueIdRoute._addFileChildren(
  LeaguesLeagueIdRouteChildren,
)

interface DraftsDraftIdRouteChildren {
  DraftsDraftIdScoresLazyRoute: typeof DraftsDraftIdScoresLazyRoute
  DraftsDraftIdLeagueWeeksLazyRoute: typeof DraftsDraftIdLeagueWeeksLazyRoute
}

const DraftsDraftIdRouteChildren: DraftsDraftIdRouteChildren = {
  DraftsDraftIdScoresLazyRoute: DraftsDraftIdScoresLazyRoute,
  DraftsDraftIdLeagueWeeksLazyRoute: DraftsDraftIdLeagueWeeksLazyRoute,
}

const DraftsDraftIdRouteWithChildren = DraftsDraftIdRoute._addFileChildren(
  DraftsDraftIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/leagues/$leagueId': typeof LeaguesLeagueIdRouteWithChildren
  '/drafts/$draftId': typeof DraftsDraftIdRouteWithChildren
  '/eventData': typeof EventDataLazyRoute
  '/leagues/$leagueId/rankings': typeof LeaguesLeagueIdRankingsLazyRoute
  '/leagues/$leagueId/scores': typeof LeaguesLeagueIdScoresLazyRoute
  '/leagues/$leagueId/rosters': typeof LeaguesLeagueIdRostersLazyRoute
  '/leagues/$leagueId/waivers': typeof LeaguesLeagueIdWaiversLazyRoute
  '/drafts/$draftId/leagueWeeks': typeof DraftsDraftIdLeagueWeeksLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/leagues/$leagueId': typeof LeaguesLeagueIdRouteWithChildren
  '/drafts/$draftId': typeof DraftsDraftIdRouteWithChildren
  '/eventData': typeof EventDataLazyRoute
  '/leagues/$leagueId/rankings': typeof LeaguesLeagueIdRankingsLazyRoute
  '/leagues/$leagueId/scores': typeof LeaguesLeagueIdScoresLazyRoute
  '/leagues/$leagueId/rosters': typeof LeaguesLeagueIdRostersLazyRoute
  '/leagues/$leagueId/waivers': typeof LeaguesLeagueIdWaiversLazyRoute
  '/drafts/$draftId/leagueWeeks': typeof DraftsDraftIdLeagueWeeksLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/leagues/$leagueId': typeof LeaguesLeagueIdRouteWithChildren
  '/drafts//$draftId': typeof DraftsDraftIdRouteWithChildren
  '/drafts/$draftId/scores': typeof DraftsDraftIdScoresLazyRoute
  '/drafts/$draftId/leagueWeeks': typeof DraftsDraftIdLeagueWeeksLazyRoute
  '/eventData': typeof EventDataLazyRoute
  '/leagues/$leagueId/rankings': typeof LeaguesLeagueIdRankingsLazyRoute
  '/leagues/$leagueId/scores': typeof LeaguesLeagueIdScoresLazyRoute
  '/leagues/$leagueId/rosters': typeof LeaguesLeagueIdRostersLazyRoute
  '/leagues/$leagueId/waivers': typeof LeaguesLeagueIdWaiversLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/leagues/$leagueId'
    | '/drafts/$draftId'
    | '/drafts/$draftId/scores'
    | '/drafts/$draftId/leagueWeeks'
    | '/eventData'
    | '/leagues/$leagueId/rankings'
    | '/leagues/$leagueId/scores'
    | '/leagues/$leagueId/rosters'
    | '/leagues/$leagueId/waivers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/' 
    | '/leagues/$leagueId'
    | '/drafts/$draftId'
    | '/drafts/$draftId/scores'
    | '/drafts/$draftId/leagueWeeks'
    | '/eventData'
    | '/leagues/$leagueId/rankings'
    | '/leagues/$leagueId/scores'
    | '/leagues/$leagueId/rosters'
    | '/leagues/$leagueId/waivers'
  id:
    | '__root__'
    | '/' 
    | '/leagues/$leagueId'
    | '/drafts//$draftId'
    | '/drafts/$draftId/scores'
    | '/drafts/$draftId/leagueWeeks'
    | '/eventData'
    | '/leagues/$leagueId/rankings'
    | '/leagues/$leagueId/scores'
    | '/leagues/$leagueId/rosters'
    | '/leagues/$leagueId/waivers'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LeaguesLeagueIdRoute: typeof LeaguesLeagueIdRouteWithChildren
  DraftsDraftIdRoute: typeof DraftsDraftIdRouteWithChildren
  EventDataLazyRoute: typeof EventDataLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LeaguesLeagueIdRoute: LeaguesLeagueIdRouteWithChildren,
  DraftsDraftIdRoute: DraftsDraftIdRouteWithChildren,
  EventDataLazyRoute: EventDataLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/leagues/$leagueId",
        "/drafts//$draftId",
        "/drafts/$draftId/scores",
        "/drafts/$draftId/leagueWeeks",
        "/eventData"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/leagues/$leagueId": {
      "filePath": "leagues/$leagueId.tsx",
      "children": [
        "/leagues/$leagueId/rankings",
        "/leagues/$leagueId/scores",
        "/leagues/$leagueId/rosters",
        "/leagues/$leagueId/waivers"
      ]
    },
    "/drafts//$draftId": {
      "filePath": "drafts/_.$draftId.tsx",
      "children": [
        "/drafts/$draftId/scores",
        "/drafts/$draftId/leagueWeeks"
      ]
    },
    "/eventData": {
      "filePath": "eventData.lazy.tsx"
    },
    "/leagues/$leagueId/rankings": {
      "filePath": "leagues/$leagueId/rankings.lazy.tsx",
      "parent": "/leagues/$leagueId"
    },
    "/leagues/$leagueId/scores": {
      "filePath": "leagues/$leagueId/scores.lazy.tsx",
      "parent": "/leagues/$leagueId"
    },
    "/leagues/$leagueId/rosters": {
      "filePath": "leagues/$leagueId/rosters.lazy.tsx",
      "parent": "/leagues/$leagueId"
    },
    "/leagues/$leagueId/waivers": {
      "filePath": "leagues/$leagueId/waivers.lazy.tsx",
      "parent": "/leagues/$leagueId"
    },
    "/drafts/$draftId/scores": {
      "filePath": "drafts/$draftId/scores.lazy.tsx",
      "parent": "/drafts//$draftId"
    },
    "/drafts/$draftId/leagueWeeks": {
      "filePath": "drafts/$draftId/leagueWeeks.lazy.tsx",
      "parent": "/drafts//$draftId"
    }
  }
}
ROUTE_MANIFEST_END */
